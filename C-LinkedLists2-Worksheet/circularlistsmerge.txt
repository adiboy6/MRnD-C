int merge_circularlists(struct node **head1, struct node **head2){
	if (*head1 == NULL && *head2 == NULL)
		return -1;
	node *temp;
	int count = 1;
	if (head1 == NULL)
	{
		temp = *head2;
		while (temp->next != *head2)
		{
			++count;
			temp = temp->next;
		}
		*head1 = *head2;
		return count;
	}
	if (head2 == NULL)
	{
		temp = *head1;
		while (temp->next != *head1)
		{
			++count;
			temp = temp->next;
		}
		return count;
	}
	node *temp1 = NULL, *temp2 = NULL, *ret = NULL,*h, *p = *head1, *q = *head2;
	int flag = 1, link = 0;
	count = 0;
	while (p->next != *head1)
	{
		++count;
		p = p->next;
	}
	p->next = NULL;
	while (q->next != *head2)
	{
		++count;
		q = q->next;
	}
	q->next = NULL;
	count += 2;
	while (*head1 != NULL && *head2 != NULL)
	{
		while ((*head1)->data == (*head2)->data)
		{
			h = *head2;
			if ((*head1)->next == NULL && (*head2)->next == NULL)
			{
				if (link != 1)
				{
					(*head1)->next = ret;
					(*head2)->next = *head1;
					*head1 = ret;
					return count;
				}
				else
				{
					(*head1)->next = *head2;
					(*head2)->next = ret;
					*head1 = ret;
					return count;
				}
			}
			else
			{
				temp1 = (*head1)->next;
				temp2 = (*head2)->next;
				if (link == 1)
				{
					(*head1)->next = *head2;
					(*head2)->next = temp1;
				}
				else
				{
					(*head1)->next = temp2;
					(*head2)->next = *head1;
				}
				*head1 = temp1;
				*head2 = temp2;
			}
			if (flag == 1)
			{
				ret = h;
				flag = 0;
			}
			if (*head1 == NULL || *head2 == NULL)
			{
				flag = 3;
				break;
			}
		}
		if (flag == 3)
			break;
		while ((*head1)->data > (*head2)->data && *head1 != NULL && *head2 != NULL)
		{
			temp2 = *head2;
			*head2 = (*head2)->next;
			if (flag == 1)
			{
				ret = temp2;
				flag = 0;
			}
			flag = 4;
			if (*head1 == NULL || *head2 == NULL)
				break;
		}
		if (flag==4)
		{
			if (temp2 != NULL)
			{
				if ((*head1)->data > temp2->data)
				{
					temp2->next = *head1;
					link = 1;
				}
			}
		}
		if (*head1 == NULL || *head2 == NULL)
			break;
		while ((*head2)->data > (*head1)->data && *head1 != NULL && *head2 != NULL)
		{
			temp1 = *head1;
			*head1 = (*head1)->next;
			if (flag == 1)
			{
				ret = temp1;
				flag = 0;
			}
			flag = 5;
			if (*head1 == NULL || *head2 == NULL)
				break;
		}
		if (flag == 5)
		{
			if (temp1 != NULL)
			{
				if ((*head2)->data > temp1->data)
				{
					temp1->next = *head2;
					link = 2;
				}
			}
		}
		if (*head1 == NULL || *head2 == NULL)
			break;
	}
	if (*head1 != NULL)
	{
		while ((*head1)->next != NULL)
			*head1 = (*head1)->next;
		(*head1)->next = ret;
		*head1 = ret;
		return count;
	}
	if (*head2 != NULL)
	{
		while ((*head2)->next != NULL)
			*head2 = (*head2)->next;
		(*head2)->next = ret;
		*head1 = ret;
		return count;
	}
}